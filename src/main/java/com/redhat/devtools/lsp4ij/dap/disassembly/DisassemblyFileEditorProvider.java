/*******************************************************************************
 * Copyright (c) 2025 Red Hat, Inc.
 * Distributed under license by Red Hat, Inc. All rights reserved.
 * This program is made available under the terms of the
 * Eclipse Public License v2.0 which accompanies this distribution,
 * and is available at https://www.eclipse.org/legal/epl-v20.html
 *
 * Contributors:
 * Red Hat, Inc. - initial API and implementation
 * Angelo Zerr - implementation of DAP disassembly editor support
 ******************************************************************************/
package com.redhat.devtools.lsp4ij.dap.disassembly;

import com.intellij.openapi.project.DumbAware;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.openapi.fileEditor.FileEditor;
import com.intellij.openapi.fileEditor.FileEditorPolicy;
import com.intellij.openapi.fileEditor.FileEditorProvider;
import com.redhat.devtools.lsp4ij.dap.client.files.DAPFileSystem;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.NotNull;

/**
 * Provides a custom editor for {@link DisassemblyFile} instances from the
 * {@link DAPFileSystem}.
 * <p>
 * This allows disassembly content (machine instructions generated by the
 * Debug Adapter Protocol) to be displayed directly in the editor area
 * instead of a separate tool window.
 * <p>
 * Only files that are instances of {@link DisassemblyFile} are accepted.
 */
public class DisassemblyFileEditorProvider implements FileEditorProvider, DumbAware {

    /**
     * Determines whether this provider can handle the given file.
     *
     * @param project the current project
     * @param file    the virtual file to check
     * @return true if the file is a {@link DisassemblyFile}, false otherwise
     */
    @Override
    public boolean accept(@NotNull Project project, @NotNull VirtualFile file) {
        // Only accept files from our custom VFS (DisassemblyFile instances)
        return file instanceof DisassemblyFile;
    }

    /**
     * Creates the actual editor instance for the given DisassemblyFile.
     *
     * @param project the current project
     * @param file    the virtual file to edit (must be a DisassemblyFile)
     * @return a FileEditor that displays the disassembly content
     */
    @Override
    public @NotNull FileEditor createEditor(@NotNull Project project, @NotNull VirtualFile file) {
        // Wrap the DisassemblyFile inside a DisassemblyFileEditor
        return new DisassemblyFileEditor((DisassemblyFile) file, project);
    }

    /**
     * Returns the unique editor type ID for this editor provider.
     *
     * @return the editor type ID string
     */
    @Override
    public @NotNull @NonNls String getEditorTypeId() {
        return "lsp.disassembly";
    }

    /**
     * Defines the policy for displaying editors of this type.
     *
     * @return {@link FileEditorPolicy#HIDE_DEFAULT_EDITOR} to hide the default text editor
     * and show only the custom disassembly editor
     */
    @Override
    public @NotNull FileEditorPolicy getPolicy() {
        return FileEditorPolicy.HIDE_DEFAULT_EDITOR;
    }
}
